global:
  port: 59876
  sessions_folder: ./.sessions
  max_concurrent_sessions: 10
  debug: false
  public_url: https://testserver.polo.bembi.dev
  features_preview:
    advanced_terminal_output: true
  integrations:
    enabled: true
    server:
      public_url: https://integrations.testserver.polo.bembi.dev
    tilt:
      enabled: true
applications:
  - name: hello-world # Mandatory
    is_default: true # Useful for reaching it via /<branch-name>
    remote: https://github.com/nginxinc/NGINX-Demos # Mandatory
    use_folder_copy: false # Copy files and directories instead of cloning
    clean_on_exit: true
    helper:
      position: bottom-left
      injection:
        always: false
        only:
          - /fwd\-dest\-test$
    fetch:
      interval: 60
    target: "http://127.0.0.1:{{port}}"
    forwards:
      - pattern: ^/path/(.+)$
        to: http://127.0.0.1:{{port2}}/$1
        host: host2.example.com 
        headers:
          add: []
          set: []
          replace:
            - Origin=host2.example.com
          del:
            - X-Powered-By
    host: "hello-world.dev"
    port:
      except: [9876]
    headers:
      add:
        - X-Powered-By=Polo
      set: []
      replace: []
      del:
        - Origin
    healthcheck:
      method: GET
      url: /
      status: 200
      max_retries: 5
      retry_interval: 30 # in seconds
      retry_timeout: 20 # in seconds
    startup:
      timeout: 300
      retries: 5
    recycle:
      inactivity_timeout: 120 # in seconds
    max_concurrent_sessions: 5
    commands:
      start: # At least one start command is mandatory
        - command: 'docker run -p {{port}}:80 -d nginxdemos/hello' # Mandatory
          output_variable: 'container_id'
          environment:
            - ENV=development
          continue_on_error: false
          working_dir: /nginx-hello
          start_healthchecking: true
          timeout: 10
        - command: 'docker run -p {{port2}}:80 -d nginxdemos/hello | xargs -I % echo "polo[container_id_2=%]"'
      stop: # At least one stop command is mandatory
        - command: "docker kill {{container_id}}"
        - command: "docker kill {{container_id_2}}"
      clean: [] # Command executed after failing or kill a session
    branches:
      - test: ^dev$
        watch: true # The branch will be automatically started and updated at each commit
      - test: ^main$
        watch: true
        main: true
      - test: ^feature/.*
        watch: false
        host: ''
        remote: ''
        target: ''
        helper:
          position: 'bottom-left'
        forwards: [] # Not implemented yet
        headers:
          add: []
          del: []
          set: []
          replace: []
        healthcheck:
          method: GET
          url: /
        startup:
          retries: 3
        recycle:
          inactivity_timeout: 1200
        commands:
          start: []
          stop: []
        port:
          except: [9876]